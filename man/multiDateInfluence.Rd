% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/multiDateInfluence.BchronologyRun.R
\name{multiDateInfluence}
\alias{multiDateInfluence}
\title{Find the influence of multiple dates in a pair of Bchronology runs}
\usage{
multiDateInfluence(bchrRun1, bchrRun2, type = "distribution",
  percentile = 0.95, plot = TRUE)
}
\arguments{
\item{bchrRun1}{The output of a run of the \code{\link{Bchronology}} function}

\item{bchrRun2}{The output of another run of the \code{\link{Bchronology}} function, possibly with different dates. Note this must have the same value of \code{predictPositions} as \code{bchrRun1}}

\item{type}{Either \code{'mean'} for the mean level ofuncertainty across the core  of \code{'distribution'} for the distribution of changes}

\item{percentile}{The value of the percentile to compare the uncertainties. Default is 50%}

\item{plot}{if \code{TRUE} will create a plot of the histograms when using}
}
\value{
Outputs some text providing the influence values for the cores in question.
}
\description{
This function takes as input two \code{\link{Bchronology}} runs and compares the uncertainty intervals. It does this by either: computing the mean uncertainty across the core (\code{type = 'mean'}) at a specified percentile level (e.g. 95%); or by plotting the distribution of uncertainty over the depths in both cores (\code{type = 'distribution'}). Both cores must have the same set of depths at regular depths intervals.
}
\details{
The argument \code{type = 'distribution'} is preferred as it takes account of the full probability distribution of the uncertainty across the core.
}
\examples{
\dontrun{
data(Glendalough)
GlenOut1 = Bchronology(ages=Glendalough$ages,
                       ageSds=Glendalough$ageSds, 
                       calCurves=Glendalough$calCurves,
                       positions=Glendalough$position, 
                       positionThicknesses=Glendalough$thickness,
                       ids=Glendalough$id, 
                       predictPositions=seq(0,1500,by=10))
# Now compare with a run that removes two dates
GlenOut2 = Bchronology(ages=Glendalough$ages[-c(3:4)],
                       ageSds=Glendalough$ageSds[-c(3:4)], 
                       calCurves=Glendalough$calCurves[-c(3:4)],
                       positions=Glendalough$position[-c(3:4)], 
                       positionThicknesses=Glendalough$thickness[-c(3:4)],
                       ids=Glendalough$id[-c(3:4)], 
                       predictPositions=seq(0,1500,by=10))


multiDateInfluence(GlenOut1, GlenOut2, type = 'distribution')
}
}
\seealso{
\code{\link{Bchronology}}, \code{\link{dateInfluence.BchronologyRun}} for finding the influence of removing a single date from a core
}
